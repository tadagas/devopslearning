What is constructor class:

Java Constructors

A constructor in Java is a special method that is used to initialize an objects. 
The constructor is called when an object of a class is created. It can be used to set initial values for object attributes:


Java Wrapper Classes

Wrapper classes provide a way to use primitive data types (int, boolean, etc..) as objects.
Wrapper classes are used for converting primitive data types into objects, like int to Integer etc. Lets take a simple example to understand why we need wrapper class in java.
For example: While working with collections in Java, we use generics for type safety like this: ArrayList<Integer> instead of this ArrayList<int>. 
The Integer is a wrapper class of int primitive type. We use wrapper class in this case because generics needs objects not primitives.

Why we need wrapper class in Java

1. As I mentioned above, one of the reason why we need wrapper is to use them in collections API. On the other hand the wrapper objects hold much more memory compared to primitive types. So use primitive types when you need efficiency and use wrapper class when you need objects instead of primitive types.

The primitive data types are not objects so they do not belong to any class. While storing in data structures which support only objects, it is required to convert the primitive type to object first which we can do by using wrapper classes.

Example:

HashMap<Integer, String> hm = new HashMap<Integer, String>();

So for type safety we use wrapper classes. This way we are ensuring that this HashMap keys would be of integer type and values would be of string type.
2. Wrapper class objects allow null values while primitive data type doesn’t allow it.

